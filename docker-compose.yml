# Command to run
# docker-compose up --build

# Command for logs
# docker-compose logs backend
# docker-compose logs frontend
# docker-compose logs db

# Command to stop and remove containers
# docker-compose down -v


services:
  db:
    image: postgres:16.9-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: pcbanabo
      POSTGRES_USER: owner
      POSTGRES_PASSWORD: 030418@pcbanabo
    ports:
      - "5432:5432"
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pcbanabo
      SPRING_DATASOURCE_USERNAME: owner
      SPRING_DATASOURCE_PASSWORD: 030418@pcbanabo
      CHROME_BINARY_PATH: /usr/bin/google-chrome
      CHROMEDRIVER_PATH: /usr/bin/chromedriver
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml
      - ./.mvn:/app/.mvn
      - ./mvnw:/app/mvnw
    command: ["./mvnw", "spring-boot:run"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      VITE_BACKEND_URL: http://backend:8080
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    command: ["npm", "run", "dev"]

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro


volumes:
  pgdata:


############################################
### Production Build Docker-compose File ###
############################################
